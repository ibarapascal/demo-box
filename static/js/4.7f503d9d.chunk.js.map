{"version":3,"sources":["components/Content.view.tsx","pages/SampleDemo/index.tsx"],"names":["useStyles","makeStyles","theme","contentRoot","width","padding","overflowY","background","border","borderLeft","marginTop","marginBottom","markdownPre","Content","children","classes","src","tag","document","createElement","async","getElementsByTagName","appendChild","loadScript","className","MarkdownContent","path","options","overrides","pre","component","props","iframe","code","JsxContent","variant","onClick","alert","color","href"],"mappings":"4GAAA,iGAKMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,YAAa,CACXC,MAAO,OACPC,QAAS,GACTC,UAAW,SACX,uBAAwB,CAEtBF,MAAO,GAET,6BAA8B,CAC5BG,WAAY,WAEd,6BAA8B,CAC5BA,WAAY,oDAEd,WAAY,CACVC,OAAQ,+BACRC,WAAY,+BACZC,UAAW,MACXC,aAAc,QAGlBC,YAAa,CACXJ,OAAQ,oBACRC,WAAY,yBAQHI,EAAU,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,SAClBC,EAAUf,IAkBhB,OAZmB,SAACgB,GAClB,IAAMC,EAAMC,SAASC,cAAc,UACnCF,EAAIG,OAAQ,EACZH,EAAID,IAAMA,EACVE,SAASG,qBAAqB,QAAQ,GAAGC,YAAYL,GAEvDM,CACE,kFAMA,uBAAKC,UAAS,UAAKT,EAAQZ,YAAb,mBAA2CW,IAQhDW,EAAkB,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAC1BX,EAAUf,IAChB,OACE,gBAAC,IAAD,CACE2B,QAAS,CACPC,UAAW,CACTC,IAAK,CACHC,UAAW,GACXC,MAAO,CACLP,UAAU,GAAD,OAAKT,EAAQH,eAG1BoB,OAAQ,CACNF,UAAW,GACXC,MAAO,CACLP,UAAU,GAAD,OAAKT,EAAQH,eAG1BqB,KAAM,CACJH,UAAW,GACXC,MAAO,CACLP,UAAU,mBAMjBE,K,gCC3FP,oCAwBMQ,EAAa,WACjB,OACE,gCACE,2CACA,gBAAC,IAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMC,MAAM,aAAjD,WAGA,gBAAC,IAAD,CAAQF,QAAQ,YAAYG,MAAM,UAAUC,KAAK,sBAAjD,UAOS,mBAACR,GACd,OACE,gBAAC,IAAYA,EACX,gBAAC,IAAD,CAAiBL,KAhCf,qMAiCF,2BACA,gBAACQ,EAAD,MACA,2BACA,gBAAC,IAAD,CAAiBR,KAAI","file":"static/js/4.7f503d9d.chunk.js","sourcesContent":["import Markdown from 'markdown-to-jsx';\nimport * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  contentRoot: {\n    width: '100%',\n    padding: 20,\n    overflowY: 'scroll',\n    '&::-webkit-scrollbar': {\n      // set to 0 to hide scroll bar while still being able to scroll\n      width: 3,\n    },\n    '&::-webkit-scrollbar-track': {\n      background: '#FF8E53',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      background: 'linear-gradient(45deg, #F50057 10%, #FF8E53 90%)',\n    },\n    '& iframe': {\n      border: '1px solid #DDDDDD !important',\n      borderLeft: '2px solid #FF8E53 !important',\n      marginTop: '1em',\n      marginBottom: '1em',\n    },\n  },\n  markdownPre: {\n    border: '1px solid #DDDDDD',\n    borderLeft: '2px solid #FF8E53',\n  },\n}));\n\ninterface ContentProps {\n  children: React.ReactNode;\n}\n\nexport const Content = ({ children }: ContentProps) => {\n  const classes = useStyles();\n  /**\n   * Declaratively loading javascript\n   * Used because the script in `index.html` won't re-run after react-router-dom changed\n   * @param src\n   */\n  const loadScript = (src: string) => {\n    const tag = document.createElement('script');\n    tag.async = false;\n    tag.src = src;\n    document.getElementsByTagName('body')[0].appendChild(tag);\n  };\n  loadScript(\n    'https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/run_prettify.js',\n  );\n\n  process.env.NODE_ENV === 'development' && console.log('dev:content');\n\n  return (\n    <div className={`${classes.contentRoot} markdown-body`}>{children}</div>\n  );\n};\n\ninterface MarkdownContentProps {\n  path: string;\n}\n\nexport const MarkdownContent = ({ path }: MarkdownContentProps) => {\n  const classes = useStyles();\n  return (\n    <Markdown\n      options={{\n        overrides: {\n          pre: {\n            component: '',\n            props: {\n              className: `${classes.markdownPre}`,\n            },\n          },\n          iframe: {\n            component: '',\n            props: {\n              className: `${classes.markdownPre}`,\n            },\n          },\n          code: {\n            component: '',\n            props: {\n              className: `prettyprint`,\n            },\n          },\n        },\n      }}\n    >\n      {path}\n    </Markdown>\n  );\n};\n","import raw from 'raw.macro';\nimport * as React from 'react';\n\nimport { Button } from '@material-ui/core';\n\nimport {\n  Content,\n  MarkdownContent\n} from '../../components/Content.view';\n\nconst md = `\n# In-line Markdown\n## In-line Markdown\n### In-line Markdown\n#### In-line Markdown\n##### In-line Markdown\n###### In-line Markdown\n\n>Some reference\n\n\\`\\`\\`\nconst data = 'sample';\n\\`\\`\\`\n`;\n\nconst JsxContent = () => {\n  return (\n    <>\n      <h1>JSX Component</h1>\n      <Button variant='contained' onClick={() => alert('clicked')}>\n        Default\n      </Button>\n      <Button variant='contained' color='primary' href='#contained-buttons'>\n        Link\n      </Button>\n    </>\n  );\n};\n\nexport default (props: any) => {\n  return (\n    <Content {...props}>\n      <MarkdownContent path={md} />\n      <hr />\n      <JsxContent />\n      <hr />\n      <MarkdownContent path={raw('./README.md')} />\n    </Content>\n  );\n};\n"],"sourceRoot":""}